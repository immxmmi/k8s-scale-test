apiVersion: v1
kind: Namespace
metadata:
  name: keda-demo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keda-demo
  namespace: keda-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keda-demo
  template:
    metadata:
      labels:
        app: keda-demo
    spec:
      containers:
        - name: app
          image: keda-demo-app:latest       
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: "100m"
          command: ["/keda-demo-app"]
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: keda-demo
  namespace: keda-demo
spec:
  selector:
    app: keda-demo
  ports:
    - name: http
      port: 80
      targetPort: 8080
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: keda-demo-scaledobject
  namespace: keda-demo
spec:
  scaleTargetRef:
    name: keda-demo
  minReplicaCount: 0
  maxReplicaCount: 10
  triggers:
    - type: prometheus
      metadata:
        serverAddress: http://prometheus-server.prometheus.svc:9090
        metricName: http_requests_total
        threshold: "100"
        query: rate(http_requests_total{pod=~"keda-demo.*"}[1m])
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: keda-demo
  namespace: prometheus
spec:
  selector:
    matchLabels:
      app: keda-demo
  namespaceSelector:
    matchNames:
      - keda-demo
  endpoints:
    - port: http
      path: /metrics
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: keda-demo-rules
  namespace: prometheus
spec:
  groups:
    - name: keda-demo.rules
      rules:
        - record: keda_demo:http_requests_per_second
          expr: rate(http_requests_total{pod=~"keda-demo.*"}[1m])
          labels:
            severity: warning